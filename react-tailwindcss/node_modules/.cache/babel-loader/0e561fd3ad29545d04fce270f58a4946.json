{"ast":null,"code":"var _jsxFileName = \"/Users/hongpinglin/Documents/react_folder/react-tailwindcss/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport ImageCard from './components/ImageCard';\nimport ImageSearch from './components/ImageSearch';\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState('');\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}\n    &q=${term}&image_type=photo&pretty=true`).then(res => res.json()).then(data => {\n      setImages(data.hits);\n      setIsLoading(false);\n    }).catch(err => console.log(err));\n  }, [term]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(ImageSearch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 6\n    }\n  }), isLoading ? /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-6xl text-center mx-auto mt-32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 19\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid grid-cols-3 gap-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 88\n    }\n  }, images.map(image => /*#__PURE__*/React.createElement(ImageCard, {\n    key: image.id,\n    image: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/hongpinglin/Documents/react_folder/react-tailwindcss/src/App.js"],"names":["React","useState","useEffect","ImageCard","ImageSearch","App","images","setImages","isLoading","setIsLoading","term","setTerm","fetch","process","env","REACT_APP_PIXABAY_API_KEY","then","res","json","data","hits","catch","err","console","log","map","image","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,KAAK,CAAE,gCAA+BC,OAAO,CAACC,GAAR,CAAYC,yBAA0B;SACvEL,IAAK,+BADL,CAAL,CAECM,IAFD,CAEMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAFb,EAGCF,IAHD,CAGMG,IAAI,IACV;AACEZ,MAAAA,SAAS,CAACY,IAAI,CAACC,IAAN,CAAT;AACAX,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAPD,EAQCY,KARD,CAQOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CARd;AASD,GAVQ,EAUN,CAACZ,IAAD,CAVM,CAAT;AAWA,sBACC;AAAK,IAAA,SAAS,EAAG,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGF,SAAS,gBAAG;AAAI,IAAA,SAAS,EAAC,oCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,gBAAwE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAC5EF,MAAM,CAACmB,GAAP,CAAWC,KAAK,iBAClB,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAtB;AAA0B,IAAA,KAAK,EAAED,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,CAD4E,CAFpF,CADD;AAWD;;AAED,eAAerB,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ImageCard from './components/ImageCard';\nimport ImageSearch from './components/ImageSearch';\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [term, setTerm] = useState('');\n  useEffect(() => {\n    fetch(`https://pixabay.com/api/?key=${process.env.REACT_APP_PIXABAY_API_KEY}\n    &q=${term}&image_type=photo&pretty=true`)\n    .then(res => res.json())\n    .then(data => \n    {\n      setImages(data.hits);\n      setIsLoading(false);\n    })\n    .catch(err => console.log(err));\n  }, [term]);\n  return (\n   <div className = \"container mx-auto\">\n     <ImageSearch />\n     {isLoading ? <h1 className=\"text-6xl text-center mx-auto mt-32\">Loading...</h1> : <div className=\"grid grid-cols-3 gap-4\">\n          {images.map(image => (\n         <ImageCard key={image.id} image={image}/>\n       ))}\n     </div>}\n   </div>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}